name: Build and Push Docker Image

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write
  
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    outputs:
      new_release_published: ${{ steps.semantic-release.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
      version: ${{ steps.semantic-release.outputs.version }}
    name: Release app and publish Docker image if there is a new release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.0

      - name: Install dependencies
        run: bun install

      - name: Build application
        run: bun run build

      - name: Run semantic-release
        id: semantic-release
        env:
          CI_BUILD_NUMBER: ${{ github.run_number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bun run release

  build:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_published == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Get package version
        id: package_version
        run: echo "version=${{ needs.release.outputs.new_release_version }}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image (Docker Hub)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/merger-pdf:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/merger-pdf:v${{ steps.package_version.outputs.version }}

      - name: Prepare repository name (lowercase for GHCR)
        id: repo
        run: |
          echo "name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo.outputs.name }}
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.package_version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.package_version.outputs.version }}
            type=semver,pattern={{major}},value=v${{ steps.package_version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image (GHCR)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ steps.repo.outputs.name }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ steps.repo.outputs.name }}:buildcache,mode=max
          platforms: linux/amd64,linux/arm64
